// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/Bo0mer/os-agent/server"
)

type FakeResponse struct {
	SetBodyStub        func([]byte)
	setBodyMutex       sync.RWMutex
	setBodyArgsForCall []struct {
		arg1 []byte
	}
	SetStatusCodeStub        func(int)
	setStatusCodeMutex       sync.RWMutex
	setStatusCodeArgsForCall []struct {
		arg1 int
	}
	StatusCodeStub        func() int
	statusCodeMutex       sync.RWMutex
	statusCodeArgsForCall []struct{}
	statusCodeReturns     struct {
		result1 int
	}
}

func (fake *FakeResponse) SetBody(arg1 []byte) {
	fake.setBodyMutex.Lock()
	fake.setBodyArgsForCall = append(fake.setBodyArgsForCall, struct {
		arg1 []byte
	}{arg1})
	fake.setBodyMutex.Unlock()
	if fake.SetBodyStub != nil {
		fake.SetBodyStub(arg1)
	}
}

func (fake *FakeResponse) SetBodyCallCount() int {
	fake.setBodyMutex.RLock()
	defer fake.setBodyMutex.RUnlock()
	return len(fake.setBodyArgsForCall)
}

func (fake *FakeResponse) SetBodyArgsForCall(i int) []byte {
	fake.setBodyMutex.RLock()
	defer fake.setBodyMutex.RUnlock()
	return fake.setBodyArgsForCall[i].arg1
}

func (fake *FakeResponse) SetStatusCode(arg1 int) {
	fake.setStatusCodeMutex.Lock()
	fake.setStatusCodeArgsForCall = append(fake.setStatusCodeArgsForCall, struct {
		arg1 int
	}{arg1})
	fake.setStatusCodeMutex.Unlock()
	if fake.SetStatusCodeStub != nil {
		fake.SetStatusCodeStub(arg1)
	}
}

func (fake *FakeResponse) SetStatusCodeCallCount() int {
	fake.setStatusCodeMutex.RLock()
	defer fake.setStatusCodeMutex.RUnlock()
	return len(fake.setStatusCodeArgsForCall)
}

func (fake *FakeResponse) SetStatusCodeArgsForCall(i int) int {
	fake.setStatusCodeMutex.RLock()
	defer fake.setStatusCodeMutex.RUnlock()
	return fake.setStatusCodeArgsForCall[i].arg1
}

func (fake *FakeResponse) StatusCode() int {
	fake.statusCodeMutex.Lock()
	fake.statusCodeArgsForCall = append(fake.statusCodeArgsForCall, struct{}{})
	fake.statusCodeMutex.Unlock()
	if fake.StatusCodeStub != nil {
		return fake.StatusCodeStub()
	} else {
		return fake.statusCodeReturns.result1
	}
}

func (fake *FakeResponse) StatusCodeCallCount() int {
	fake.statusCodeMutex.RLock()
	defer fake.statusCodeMutex.RUnlock()
	return len(fake.statusCodeArgsForCall)
}

func (fake *FakeResponse) StatusCodeReturns(result1 int) {
	fake.StatusCodeStub = nil
	fake.statusCodeReturns = struct {
		result1 int
	}{result1}
}

var _ server.Response = new(FakeResponse)
